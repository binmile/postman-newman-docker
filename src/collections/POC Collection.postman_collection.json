{"info":{"_postman_id":"d67dea0e-3b6c-4f1f-83ef-1b9790cb2374","name":"POC Collection","description":"This API collection contains post and comment endpoints.","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"All posts","event":[{"listen":"prerequest","script":{"exec":["postman.setGlobalVariable('getNameEval', () => {","  return pm.variables.replaceIn('{{$randomNamePrefix}} {{$randomFullName}}') ;","});","","postman.setGlobalVariable(\"loadUtils\", () => {","    let utils = {};","    utils.myFunction1 = () => {","        console.log('inside fun1');","    }","    utils.myFunction2 = () => {","        console.log('inside fun2')","    }","    return utils;","});","","_.prototype.sayHello = (name) => {","        console.log(`Hello! ${name}`);","};","","Object.prototype.sayHello = (name) => {","        console.log(`Hello! ${name}`);","};"],"type":"text/javascript"}},{"listen":"test","script":{"exec":["var res = JSON.parse(responseBody);","","","pm.test(\"Successful request 200\", function () {","    pm.expect(res).to.be.an('array');","    pm.expect(res).to.have.length(10);","});","","","pm.test(\"pm.response assertion\", function () {","    pm.response.to.have.status(200);","});","","","","","tests[\"reponse code 200\"] = pm.response.code == 201","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[],"url":{"raw":"{{local_api_v1}}/posts","host":["{{local_api_v1}}"],"path":["posts"]},"description":"Return all the posts in JSON array format"},"response":[]},{"name":"add post","event":[{"listen":"test","script":{"exec":["let res = JSON.parse(responseBody);","","","","pm.test(\"respose has id\", () => {","    pm.expect(res).to.have.property('id');","    pm.collectionVariables.set(\"temp_post_id\", res.id);  ","})","","//console.log(pm.response);","tests[\"response has title\"] = responseBody.has(\"title\");","pm.collectionVariables.set(\"temp_post_title\", res.title);","tests[\"response has author\"] = responseBody.has(\"author\");","pm.collectionVariables.set(\"temp_post_author\", res.author);","tests[\"response has body\"] = responseBody.has(\"body\");","pm.collectionVariables.set(\"temp_post_body\", res.body);","","var schema = {","      \"type\": \"object\",","      \"additionalProperties\": true,","      \"properties\": {","        \"id\": { \"type\": \"integer\"},","        \"title\": {\"type\": \"string\"},","        \"author\": {\"type\": \"string\"},","        \"body\": {\"type\": \"string\"}","      },","      \"required\": [ \"id\", \"title\", \"author\", \"body\"]","    }","","//console.log(res);","pm.test('Schema is valid', function() {","  pm.response.to.have.jsonSchema(schema);","  //pm.expect(ajv.validate(schema, res), JSON.stringify(ajv.errors)).to.be.true;","});"],"type":"text/javascript"}},{"listen":"prerequest","script":{"exec":["// const utils = eval(pm.globals.get(\"loadUtils\"))();","","","// utils.myFunction1();","// utils.myFunction2();","","//pm.variables.set(\"tmp_author\",eval(pm.globals.get(\"getNameEval\"))());","","//pm.variables.set(\"tmp_body\",Objec.getRanTitle());","","// let obj = {};","// obj.sayHello(`Griffin`);","","// _.sayHello(`Griffin`);","","//postman.setNextRequest(\"add comments\");","//postman.setNextRequest(null);"],"type":"text/javascript"}}],"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"author\": \"{{$randomFullName}}\",\n    \"body\": \"{{$randomLoremSentence}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{local_api_v1}}/posts","host":["{{local_api_v1}}"],"path":["posts"]},"description":"Create a new post in system generate a unique post id in incremental manner."},"response":[]},{"name":"get post by id","event":[{"listen":"test","script":{"exec":["var res = JSON.parse(responseBody);","","tests[\"title match\"] = res.title == pm.collectionVariables.get(\"temp_post_title\")","tests[\"author match\"] = res.author == pm.collectionVariables.get(\"temp_post_author\")","tests[\"body match\"] = res.body == pm.collectionVariables.get(\"temp_post_body\")","","","","","var template = `","    <table bgcolor=\"#FFFFFF\">","        <tr>","            <th>Title</th>","            <th>Author</th>","            <th>body</th>","        </tr>","            <tr>","                <td>{{title}}</td>","                <td>{{author}}</td>","                <td>{{body}}</td>","            </tr>","    </table>","`;","","pm.visualizer.set(template, JSON.parse(responseBody));"],"type":"text/javascript"}}],"request":{"method":"GET","header":[],"url":{"raw":"{{local_api_v1}}/posts/{{temp_post_id}}","host":["{{local_api_v1}}"],"path":["posts","{{temp_post_id}}"]},"description":"Get the post from system by post ID"},"response":[]},{"name":"add comments","event":[{"listen":"test","script":{"exec":["let res = JSON.parse(responseBody);","","pm.collectionVariables.set(\"temp_comment_id\", res.id);","","// pm.test(\"respose has data\", () => {","//     if(res.data && res.data.id){","//         pm.environment.set(\"temp_emp_id\", res.data.id);","//     }  ","// })",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{ \n\t\"body\": \"gfhgfhgfhgfghf\",\n\t\"postId\": {{temp_post_id}}\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{local_api_v1}}/comments","host":["{{local_api_v1}}"],"path":["comments"]},"description":"Add a comment to an specific post by post ID"},"response":[]},{"name":"get comment by id","request":{"method":"GET","header":[],"url":{"raw":"{{local_api_v1}}/comments/{{temp_comment_id}}","host":["{{local_api_v1}}"],"path":["comments","{{temp_comment_id}}"]},"description":"This will fetch a comment by comment ID"},"response":[]},{"name":"remove comment","request":{"method":"DELETE","header":[],"url":{"raw":"{{local_api_v1}}/comments/{{temp_comment_id}}","host":["{{local_api_v1}}"],"path":["comments","{{temp_comment_id}}"]},"description":"Delete an specific comment by providing comment Id"},"response":[]},{"name":"remove post","event":[{"listen":"test","script":{"exec":["const m = require('moment')","","//console.log(m());"],"type":"text/javascript"}}],"request":{"method":"DELETE","header":[],"url":{"raw":"{{local_api_v1}}/posts/{{temp_post_id}}","host":["{{local_api_v1}}"],"path":["posts","{{temp_post_id}}"]},"description":"Delete an specific post from system by providing post ID"},"response":[]}],"variable":[{"key":"temp_post_id","value":""},{"key":"temp_post_title","value":""},{"key":"temp_post_author","value":""},{"key":"temp_post_body","value":""},{"key":"temp_comment_id","value":""}]}